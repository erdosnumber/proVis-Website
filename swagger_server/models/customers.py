# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Customers(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cus_id: str=None, name: str=None, emailid: str=None, phone_number: str=None, password: str=None):  # noqa: E501
        """Customers - a model defined in Swagger

        :param cus_id: The cus_id of this Customers.  # noqa: E501
        :type cus_id: str
        :param name: The name of this Customers.  # noqa: E501
        :type name: str
        :param emailid: The emailid of this Customers.  # noqa: E501
        :type emailid: str
        :param phone_number: The phone_number of this Customers.  # noqa: E501
        :type phone_number: str
        :param password: The password of this Customers.  # noqa: E501
        :type password: str
        """
        self.swagger_types = {
            'cus_id': str,
            'name': str,
            'emailid': str,
            'phone_number': str,
            'password': str
        }

        self.attribute_map = {
            'cus_id': 'cus_id',
            'name': 'name',
            'emailid': 'emailid',
            'phone_number': 'phone_number',
            'password': 'password'
        }
        self._cus_id = cus_id
        self._name = name
        self._emailid = emailid
        self._phone_number = phone_number
        self._password = password

    @classmethod
    def from_dict(cls, dikt) -> 'Customers':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Customers of this Customers.  # noqa: E501
        :rtype: Customers
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cus_id(self) -> str:
        """Gets the cus_id of this Customers.

        customer id  # noqa: E501

        :return: The cus_id of this Customers.
        :rtype: str
        """
        return self._cus_id

    @cus_id.setter
    def cus_id(self, cus_id: str):
        """Sets the cus_id of this Customers.

        customer id  # noqa: E501

        :param cus_id: The cus_id of this Customers.
        :type cus_id: str
        """

        self._cus_id = cus_id

    @property
    def name(self) -> str:
        """Gets the name of this Customers.


        :return: The name of this Customers.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Customers.


        :param name: The name of this Customers.
        :type name: str
        """

        self._name = name

    @property
    def emailid(self) -> str:
        """Gets the emailid of this Customers.


        :return: The emailid of this Customers.
        :rtype: str
        """
        return self._emailid

    @emailid.setter
    def emailid(self, emailid: str):
        """Sets the emailid of this Customers.


        :param emailid: The emailid of this Customers.
        :type emailid: str
        """

        self._emailid = emailid

    @property
    def phone_number(self) -> str:
        """Gets the phone_number of this Customers.


        :return: The phone_number of this Customers.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number: str):
        """Sets the phone_number of this Customers.


        :param phone_number: The phone_number of this Customers.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def password(self) -> str:
        """Gets the password of this Customers.


        :return: The password of this Customers.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this Customers.


        :param password: The password of this Customers.
        :type password: str
        """

        self._password = password
