# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Reviews(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, id: str=None, cus_uid: str=None, p_uid: str=None, review: str=None):  # noqa: E501
        """Reviews - a model defined in Swagger

        :param name: The name of this Reviews.  # noqa: E501
        :type name: str
        :param id: The id of this Reviews.  # noqa: E501
        :type id: str
        :param cus_uid: The cus_uid of this Reviews.  # noqa: E501
        :type cus_uid: str
        :param p_uid: The p_uid of this Reviews.  # noqa: E501
        :type p_uid: str
        :param review: The review of this Reviews.  # noqa: E501
        :type review: str
        """
        self.swagger_types = {
            'name': str,
            'id': str,
            'cus_uid': str,
            'p_uid': str,
            'review': str
        }

        self.attribute_map = {
            'name': 'name',
            'id': 'id',
            'cus_uid': 'cus_uid',
            'p_uid': 'p_uid',
            'review': 'review'
        }
        self._name = name
        self._id = id
        self._cus_uid = cus_uid
        self._p_uid = p_uid
        self._review = review

    @classmethod
    def from_dict(cls, dikt) -> 'Reviews':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Reviews of this Reviews.  # noqa: E501
        :rtype: Reviews
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Reviews.


        :return: The name of this Reviews.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Reviews.


        :param name: The name of this Reviews.
        :type name: str
        """

        self._name = name

    @property
    def id(self) -> str:
        """Gets the id of this Reviews.


        :return: The id of this Reviews.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Reviews.


        :param id: The id of this Reviews.
        :type id: str
        """

        self._id = id

    @property
    def cus_uid(self) -> str:
        """Gets the cus_uid of this Reviews.

        customer id of the one who placed the order  # noqa: E501

        :return: The cus_uid of this Reviews.
        :rtype: str
        """
        return self._cus_uid

    @cus_uid.setter
    def cus_uid(self, cus_uid: str):
        """Sets the cus_uid of this Reviews.

        customer id of the one who placed the order  # noqa: E501

        :param cus_uid: The cus_uid of this Reviews.
        :type cus_uid: str
        """

        self._cus_uid = cus_uid

    @property
    def p_uid(self) -> str:
        """Gets the p_uid of this Reviews.

        product id of the product bookamarked  # noqa: E501

        :return: The p_uid of this Reviews.
        :rtype: str
        """
        return self._p_uid

    @p_uid.setter
    def p_uid(self, p_uid: str):
        """Sets the p_uid of this Reviews.

        product id of the product bookamarked  # noqa: E501

        :param p_uid: The p_uid of this Reviews.
        :type p_uid: str
        """

        self._p_uid = p_uid

    @property
    def review(self) -> str:
        """Gets the review of this Reviews.


        :return: The review of this Reviews.
        :rtype: str
        """
        return self._review

    @review.setter
    def review(self, review: str):
        """Sets the review of this Reviews.


        :param review: The review of this Reviews.
        :type review: str
        """

        self._review = review
