# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Products(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, p_uid: str=None, location: str=None, category: str=None, product_img_url: str=None, product_description: str=None, company_name: str=None, company_id: str=None, company_img_url: str=None, contractor_id: str=None, contractor_name: str=None):  # noqa: E501
        """Products - a model defined in Swagger

        :param p_uid: The p_uid of this Products.  # noqa: E501
        :type p_uid: str
        :param location: The location of this Products.  # noqa: E501
        :type location: str
        :param category: The category of this Products.  # noqa: E501
        :type category: str
        :param product_img_url: The product_img_url of this Products.  # noqa: E501
        :type product_img_url: str
        :param product_description: The product_description of this Products.  # noqa: E501
        :type product_description: str
        :param company_name: The company_name of this Products.  # noqa: E501
        :type company_name: str
        :param company_img_url: The company_img_url of this Products.  # noqa: E501
        :type company_img_url: str
        :param contractor_id: The contractor_id of this Products.  # noqa: E501
        :type contractor_id: str
        :param contractor_name: The contractor_name of this Products.  # noqa: E501
        :type contractor_name: str
        """
        self.swagger_types = {
            'p_uid': str,
            'location': str,
            'category': str,
            'product_img_url': str,
            'product_description': str,
            'company_name': str,
            'company_id' :str,
            'company_img_url': str,
            'contractor_id': str,
            'contractor_name': str
        }

        self.attribute_map = {
            'p_uid': 'p_uid',
            'location': 'location',
            'category': 'category',
            'product_img_url': 'product_img_url',
            'product_description': 'product_description',
            'company_name': 'company_name',
            'company_id': 'company_id',
            'company_img_url': 'company_img_url',
            'contractor_id': 'contractor_id',
            'contractor_name': 'contractor_name'
        }
        self._p_uid = p_uid
        self._location = location
        self._category = category
        self._product_img_url = product_img_url
        self._product_description = product_description
        self._company_name = company_name
        self._company_id=company_id
        self._company_img_url = company_img_url
        self._contractor_id = contractor_id
        self._contractor_name = contractor_name

    @classmethod
    def from_dict(cls, dikt) -> 'Products':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Products of this Products.  # noqa: E501
        :rtype: Products
        """
        return util.deserialize_model(dikt, cls)

    @property
    def p_uid(self) -> str:
        """Gets the p_uid of this Products.


        :return: The p_uid of this Products.
        :rtype: str
        """
        return self._p_uid

    @p_uid.setter
    def p_uid(self, p_uid: str):
        """Sets the p_uid of this Products.


        :param p_uid: The p_uid of this Products.
        :type p_uid: str
        """

        self._p_uid = p_uid

    @property
    def location(self) -> str:
        """Gets the location of this Products.


        :return: The location of this Products.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location: str):
        """Sets the location of this Products.


        :param location: The location of this Products.
        :type location: str
        """

        self._location = location

    @property
    def category(self) -> str:
        """Gets the category of this Products.


        :return: The category of this Products.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category: str):
        """Sets the category of this Products.


        :param category: The category of this Products.
        :type category: str
        """

        self._category = category

    @property
    def product_img_url(self) -> str:
        """Gets the product_img_url of this Products.


        :return: The product_img_url of this Products.
        :rtype: str
        """
        return self._product_img_url

    @product_img_url.setter
    def product_img_url(self, product_img_url: str):
        """Sets the product_img_url of this Products.


        :param product_img_url: The product_img_url of this Products.
        :type product_img_url: str
        """

        self._product_img_url = product_img_url

    @property
    def product_description(self) -> str:
        """Gets the product_description of this Products.


        :return: The product_description of this Products.
        :rtype: str
        """
        return self._product_description

    @product_description.setter
    def product_description(self, product_description: str):
        """Sets the product_description of this Products.


        :param product_description: The product_description of this Products.
        :type product_description: str
        """

        self._product_description = product_description

    @property
    def company_name(self) -> str:
        """Gets the company_name of this Products.


        :return: The company_name of this Products.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name: str):
        """Sets the company_name of this Products.


        :param company_name: The company_name of this Products.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def company_id(self) -> str:
        """Gets the company_id of this Products.


        :return: The company_id of this Products.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id: str):
        """Sets the company_id of this Products.


        :param company_id: The company_id of this Products.
        :type company_id: str
        """

        self._company_id = company_id


    @property
    def company_img_url(self) -> str:
        """Gets the company_img_url of this Products.


        :return: The company_img_url of this Products.
        :rtype: str
        """
        return self._company_img_url

    @company_img_url.setter
    def company_img_url(self, company_img_url: str):
        """Sets the company_img_url of this Products.


        :param company_img_url: The company_img_url of this Products.
        :type company_img_url: str
        """

        self._company_img_url = company_img_url

    @property
    def contractor_id(self) -> str:
        """Gets the contractor_id of this Products.


        :return: The contractor_id of this Products.
        :rtype: str
        """
        return self._contractor_id

    @contractor_id.setter
    def contractor_id(self, contractor_id: str):
        """Sets the contractor_id of this Products.


        :param contractor_id: The contractor_id of this Products.
        :type contractor_id: str
        """

        self._contractor_id = contractor_id

    @property
    def contractor_name(self) -> str:
        """Gets the contractor_name of this Products.


        :return: The contractor_name of this Products.
        :rtype: str
        """
        return self._contractor_name

    @contractor_name.setter
    def contractor_name(self, contractor_name: str):
        """Sets the contractor_name of this Products.


        :param contractor_name: The contractor_name of this Products.
        :type contractor_name: str
        """

        self._contractor_name = contractor_name
